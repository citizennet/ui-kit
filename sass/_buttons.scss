//
// Buttons
// --------------------------------------------------

// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  white-space: nowrap;
  letter-spacing: .02em;
  border: 0;
  //background-color: transparent;
  //color: $grey-1;

  @include button-variant($cn-grey-1, transparent);
  @include button-size(6px, 20px, inherit, 1.9, $btn-border-radius-base);
  @include user-select(none);

//  &,
//  &:active,
//  &.active {
//    &:focus,
//    &.focus {
//      @include tab-focus;
//    }
//  }

  &:hover,
  &:focus,
  &.focus {
    text-decoration: none;
    box-shadow: 0 2px 4px rgba($black, 0.15);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.65);
    @include box-shadow(none);
  }

  &:active,
  &.active,
  &:focus,
  &:active:focus {
    @include box-shadow(inset 1px 1px 2px rgba(0, 0, 0, .3));
    outline: 0;
  }

  &:hover {
    @include box-shadow(none);
  }

  &.btn-default {
    @include button-variant($cn-grey-1, $cn-semi-lite, $cn-semi-lite-hover);
  }

  &.btn-default-dark {
    @include button-variant($cn-silver, $cn-semi-dark, $cn-semi-dark-hover);
  }

  &.btn-primary {
    @include button-variant($cn-white, $cn-blue-2);
  }

  &.btn-success {
    @include button-variant($cn-white, $cn-good);
  }

  &.btn-danger {
    @include button-variant($cn-white, $cn-bad);
  }

  &.btn-facebook:not(label) {
    @include button-variant($cn-white, $fb-blue);
    border-color: $fb-border;

    //.cn-form-head & {
      //border-color: darken($fb-border, 25)
    //}
  }

  &.btn-twitter:not(label) {
    @include button-variant($cn-white, $tw-blue);
    border-color: $tw-border;

    //.cn-form-head & {
      //border-color: darken($tw-border, 25)
    //}
  }

  i {
    &.glyphicon {
      margin-right: 5px;
    }
  }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
  }
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: $link-color;
  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
}

.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

.btn-xs {
  @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn, label.btn, select.form-control {
  //border: 1px solid #D6D7DB;
//  color: #D6D7DB;
  @include box-shadow(none);
//  background-color: #F9F8FA;
  //  @include box-shadow(inset 0 -1px 0 $text-field-shadow);
  font-weight: 300;
  @include border-radius($radii);

  &.dropdown-small {
    font-size: 14px;
    height: 29px;
  }

  // radio button
  span.ng-binding {
    line-height: 28px;
  }
}

label.btn, select.form-control {
  color: $dropdown-text;
  background-color: $dropdown-bg;
  padding: 5px 15px;
  height: 39px;

  &.btn-sm {
    padding: 2px 10px;
    height: 33px;
  }
}

//input[type="text"]:focus {
//  @include transition(all .3s ease);
//  @include box-shadow(0 1px .25px #DAD6DF);
//  outline: none;
//}

.btn.btn-xs {
  padding: 1px 13px;
}

.btn-sm {
  .icn-caret-sm {
    margin-top: -2px;
    margin-left: 1px;
  }
}

.btn.btn-xs {
  padding: 1px 13px;
}

.cn-radiobuttons {
  .btn-group {
    display: block;

    .btn-facebook {
      //      width: 50%;

      &.active {
        background-color: $fb-blue;
        border-color: $fb-border;
        color: $white;
      }
    }

    .btn-twitter {
      //      width: 50%;

      &.active {
        background-color: $tw-blue;
        border-color: $tw-border;
        color: $white;
      }
    }

    .btn-instagram {
      //      width: 50%;

      &.active {
        background-color: $ig-brown;
        border-color: $ig-border;
        color: $white;
      }
    }
  }
}

.cn-autocomplete-list {
  margin: 1px 0;
  padding: 2px;
  background-color: $white;
  @include border-radius($radii $radii 0 0);

  & + tags-input .host,
  & + .host {
    .input.form-control {
      .has-success &,
      .has-error & {
        @include border-radius(0 0 $radii $radii);
      }
    }
  }

  .list-group-item {
    padding: 0 35px 0 0;
    background-color: transparent;
    border: 0;

    &:last-child {
      @include border-radius(0);
    }

    &:hover {
      background-color: $primary-highlight;

      .close {
        opacity: 1;
      }
    }

    &:first-child {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    //    .label-primary {
    //      background-color: darken($primary-highlight, 5%);
    //    }

    &,
    .has-success &,
    .has-error & {
      .form-control {
        min-height: 32px;
        padding-top: 0;
        padding-bottom: 0;
      }
      .form-control,
      .btn {
        height: 32px;
        margin: 1px 0;
        &[disabled] {
          border: 0;
          background: transparent;
        }
      }
    }

    > .tag-item {
      display: block;
      padding: 1px 8px;
      line-height: 32px;
      margin: 0;
    }

    .close {
      position: absolute;
      z-index: 99;
      top: 4px;
      right: 10px;
      opacity: 0;

      &:hover {
        color: $danger-color;
      }
    }

    .form-group {
      margin-bottom: 0;
    }

    .help-block {
      margin: 0;
    }

    .btn {
      padding-top: 6px;
      padding-bottom: 6px;
    }
  }
}

.form-control[disabled],
fieldset[disabled] .form-control {
  cursor: default;
}

.btn-input-group-start {
  &, & .form-control {
    border-radius: $radii 0 0 $radii;
  }
}

.btn-input-group-end {
  &, & .form-control {
    border-radius: 0 $radii $radii 0;
  }
}

cn-video-targeting {
  .engagement-spec-list {

    video {
      width: 100%;
    }
  }
}
